<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd ">


	<!-- 开启SpringMVC注解支持 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<ref bean="fastJsonHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	
	<!-- 启用aop注解 对类代理-->
	<!-- blog.csdn.net/sadfishsc/article/details/51027873
		 http://blog.csdn.net/xichenguan/article/details/50487583 
		 http://www.bkjia.com/Javabc/1027463.html -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 扫描controller，对controller层进行注入 -->
	<!-- 会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的 -->
	<context:component-scan base-package="com.beisi"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.RestController" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>



	<!-- 对静态资源文件的访问 -->
	<mvc:resources location="/static/" mapping="/static/**" cache-period="31556926" />
	<mvc:resources location="/favicon.ico" mapping="/favicon.ico" />


	<!-- JSON 避免IE执行AJAX时，返回JSON出现下载文件 ，修改全局时间格式-->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper">
			<bean class="com.fasterxml.jackson.databind.ObjectMapper">
				<property name="dateFormat">
					<bean class="java.text.SimpleDateFormat">
						<constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="fastJsonHttpMessageConverter"
		class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
		<property name="features">
			<list>
				<!-- 输出key时是否使用双引号 -->
				<value>QuoteFieldNames</value>
				<!-- 是否输出值为null的字段 -->
				<!-- <value>WriteMapNullValue</value> -->
				<!-- 数值字段如果为null,输出为0,而非null -->
				<value>WriteNullNumberAsZero</value>
				<!-- List字段如果为null,输出为[],而非null -->
				<value>WriteNullListAsEmpty</value>
				<!-- 字符类型字段如果为null,输出为"",而非null -->
				<value>WriteNullStringAsEmpty</value>
				<!-- Boolean字段如果为null,输出为false,而非null -->
				<value>WriteNullBooleanAsFalse</value>
				<!-- null String不输出 -->
				<value>WriteNullStringAsEmpty</value>
				<!-- null String也要输出 -->
				<!-- <value>WriteMapNullValue</value> -->
				<!-- Date的日期转换器 -->
				<value>WriteDateUseDateFormat</value>
			</list>
		</property>
	</bean>

	<!-- JSON END -->


</beans>  
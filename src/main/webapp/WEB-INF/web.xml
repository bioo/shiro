<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	
	<display-name>shiro</display-name>
	
	<!-- 1、Base -->
	<welcome-file-list>
		<welcome-file>index</welcome-file>
	</welcome-file-list>
	<!-- 配置错误跳转界面 -->
	<error-page>
		<!-- 路径不正确 -->
		<error-code>404</error-code>
		<location>/404</location>
	</error-page>
	<error-page>
		<!-- 没有访问权限，访问被禁止 -->
		<error-code>405</error-code>
		<location>/405</location>
	</error-page>
	<error-page>
		<!-- 内部错误 -->
		<error-code>500</error-code>
		<location>/500</location>
	</error-page>
	<!-- 设计路径变量任意名称,如果不配置默认值是"webapp.root",System.getProperty("webapp.root")来动态获项目的运行路径-->
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webApp.root</param-value>
	</context-param>
	
	<!-- 2、Log4j -->
	<!--log4j配置动态设置（不建议使用）
		1、当前spring4.2.0 配置Log4j监听器 日志动态加载。
		2、Log4jConfigListener必须要在spring的Listener之前。
		3、Spring 4.2.1后废弃，建议使用log4j2和更高版本spring
		4、当 Tomcat的server.xml中reloadable="true"，应用服务器或重新部署装载项目，不会关闭所有的线程，导致出错
	-->
    <!-- 
	    <context-param>
	        <param-name>log4jConfigLocation</param-name>
	        <param-value>classpath:log4j.properties</param-value>
	    </context-param>  
	-->
	<!-- 
	<context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener> 
   
    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener </listener-class>
    </listener>
     -->
    	<!-- log4j2-begin -->
	<context-param>
		<param-name>log4jConfiguration</param-name>
		<param-value>classpath:log4j2.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
	</listener>
	<filter>
		<filter-name>log4jServletFilter</filter-name>
		<filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>log4jServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
	<!-- log4j2-end -->
    
    
    <!-- 3、Spring -->
	<!-- Spring 相关配置文件 -->
	<!-- spring和springmvc的基本的配置 --> 	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring-config.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
 <!-- 使用监听方式无法正常加载
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring-config.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<listener>
		<description>SpringContextLoaderListener</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
 -->
	<!-- Spring字符集 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 4、shiro 安全过滤器 (最好在所有过滤器最前)-->
    <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <async-supported>true</async-supported>
        <init-param>
            <!-- 该值缺省为false,表示生命周期由SpringApplicationContext管理,设置为true则表示由ServletContainer管理 -->
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <!-- XSS攻击防护 -->
    <filter>
		<filter-name>xssFilter</filter-name>
		<filter-class>com.beisi.common.xss.XssFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>xssFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 6、Druid监控 -->
	<filter>
        <filter-name>DruidWebStatFilter</filter-name>
        <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
        <init-param>
            <param-name>exclusions</param-name>
            <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>DruidWebStatFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    <servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>
</web-app>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<properties>
	
	</properties>

	<settings>
		<!-- 全局映射器启用缓存 -->
		<setting name="cacheEnabled" value="true" />
		
		<!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载,提高性能 -->
		<setting name="lazyLoadingEnabled" value="true" />
		
		<!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能 -->
		<setting name="aggressiveLazyLoading" value="false" />
		
		<!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->
		<setting name="multipleResultSetsEnabled" value="true" />
		
		<!-- 允许使用列标签代替列名 -->
		<setting name="useColumnLabel" value="true" />
		
		<!-- 不允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
		<setting name="useGeneratedKeys" value="false" />
		
		<!-- 给予被嵌套的resultMap以字段-属性的映射支持 FULL,PARTIAL -->
		<setting name="autoMappingBehavior" value="PARTIAL" />
		
		<!-- 指定检测到自动映射目标的未知列（或未知属性类型）时的行为。NONE：不执行任何操作	WARNING: 输出警告日志('org.apache.ibatis.session.AutoMappingUnknownColumnBehavior'的日志级别必须设置为WARN)	FAILING: Fail映射（抛出SqlSessionException）-->
		<setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
		
		<!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。 -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		
		<!-- 设置超时时间，它决定驱动等待数据库响应的秒数 -->
		<setting name="defaultStatementTimeout" value="25" />
		
		<!-- 为驱动的结果集获取数量（fetchSize）设置一个提示值。此参数只可以在查询设置中被覆盖。 -->
		<!--  <setting name="defaultFetchSize" value="100"/>  -->
		
		<!-- 允许在嵌套语句中使用分页（RowBounds）。 If allow, set the false. -->
		<setting name="safeRowBoundsEnabled" value="false" />
		
		<!-- 允许在嵌套语句中使用分页（ResultHandler）。 If allow, set the false. -->
		<!--  <setting name="safeResultHandlerEnabled" value="false"/> -->
		
		<!-- 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射。 -->
		<setting name="mapUnderscoreToCamelCase" value="true" />
		
		<!-- MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。 -->
		<setting name="localCacheScope" value="SESSION" />
		
		<!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。 某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER -->
		<setting name="jdbcTypeForNull" value="OTHER" />
		
		<!-- 指定哪个对象的方法触发一次延迟加载 -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
		
        <!-- 打印查询语句 -->  
        <setting name="logImpl" value="LOG4J2" />

	</settings>
	
	<plugins>
		<!-- sql语句打印拦截器 -->
		<plugin interceptor="com.beisi.common.mybatis.log4j2.SqlCostInterceptor"/>
	</plugins>
	
	<!-- 类型别名是为 Java 类型设置一个短的名字。它只和 XML 配置有关，存在的意义仅在于用来减少类完全限定名的冗余 -->
	<!--  
	
	<typeAliases>
		<typeAlias alias="User" type="com.beisi.entity.User"/>
		<package name="com.beisi.entity"/>
	</typeAliases>


	<plugins>
		<plugin interceptor=""></plugin>
	</plugins>
	
	-->

</configuration>